package com.hust.contract;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Future;
import org.bcos.channel.client.TransactionSucCallback;
import org.bcos.web3j.abi.TypeReference;
import org.bcos.web3j.abi.datatypes.Bool;
import org.bcos.web3j.abi.datatypes.Function;
import org.bcos.web3j.abi.datatypes.Type;
import org.bcos.web3j.abi.datatypes.Utf8String;
import org.bcos.web3j.abi.datatypes.generated.Uint256;
import org.bcos.web3j.crypto.Credentials;
import org.bcos.web3j.protocol.Web3j;
import org.bcos.web3j.protocol.core.methods.response.TransactionReceipt;
import org.bcos.web3j.tx.Contract;
import org.bcos.web3j.tx.TransactionManager;

/**
 * Auto generated code.<br>
 * <strong>Do not modify!</strong><br>
 * Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>, or {@link org.bcos.web3j.codegen.SolidityFunctionWrapperGenerator} to update.
 *
 * <p>Generated with web3j version none.
 */
public final class Book6 extends Contract {
    private static String BINARY = "";

    public static final String ABI = "[{\"constant\":false,\"inputs\":[{\"name\":\"_bookId\",\"type\":\"string\"}],\"name\":\"returnBook\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_bookId\",\"type\":\"string\"}],\"name\":\"getBookInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_bookId\",\"type\":\"string\"}],\"name\":\"checkOverdue\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bookId\",\"type\":\"string\"},{\"name\":\"_studId\",\"type\":\"string\"}],\"name\":\"wantBook\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bookId\",\"type\":\"string\"},{\"name\":\"_newDuration\",\"type\":\"uint256\"}],\"name\":\"updateMaxBorrowDuration\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_bookCategory\",\"type\":\"string\"}],\"name\":\"getBooksOfCategory\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_studId\",\"type\":\"string\"},{\"name\":\"_bookId\",\"type\":\"string\"},{\"name\":\"_emailAddr\",\"type\":\"string\"},{\"name\":\"_bookName\",\"type\":\"string\"},{\"name\":\"_schoolName\",\"type\":\"string\"},{\"name\":\"_bookCategory\",\"type\":\"string\"}],\"name\":\"registerStudent\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bookId\",\"type\":\"string\"},{\"name\":\"_studId\",\"type\":\"string\"}],\"name\":\"borrowBook\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_studId\",\"type\":\"string\"}],\"name\":\"getStudent\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_bookId\",\"type\":\"string\"}],\"name\":\"checkBookStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"}]";

    private Book6(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, Boolean isInitByName) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit, isInitByName);
    }

    private Book6(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, Boolean isInitByName) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit, isInitByName);
    }

    private Book6(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit, false);
    }

    private Book6(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit, false);
    }

    public Future<TransactionReceipt> returnBook(Utf8String _bookId) {
        Function function = new Function("returnBook", Arrays.<Type>asList(_bookId), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public void returnBook(Utf8String _bookId, TransactionSucCallback callback) {
        Function function = new Function("returnBook", Arrays.<Type>asList(_bookId), Collections.<TypeReference<?>>emptyList());
        executeTransactionAsync(function, callback);
    }

    public Future<List<Type>> getBookInfo(Utf8String _bookId) {
        Function function = new Function("getBookInfo", 
                Arrays.<Type>asList(_bookId), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return executeCallMultipleValueReturnAsync(function);
    }

    public Future<List<Type>> checkOverdue(Utf8String _bookId) {
        Function function = new Function("checkOverdue", 
                Arrays.<Type>asList(_bookId), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}, new TypeReference<Uint256>() {}));
        return executeCallMultipleValueReturnAsync(function);
    }

    public Future<TransactionReceipt> wantBook(Utf8String _bookId, Utf8String _studId) {
        Function function = new Function("wantBook", Arrays.<Type>asList(_bookId, _studId), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public void wantBook(Utf8String _bookId, Utf8String _studId, TransactionSucCallback callback) {
        Function function = new Function("wantBook", Arrays.<Type>asList(_bookId, _studId), Collections.<TypeReference<?>>emptyList());
        executeTransactionAsync(function, callback);
    }

    public Future<TransactionReceipt> updateMaxBorrowDuration(Utf8String _bookId, Uint256 _newDuration) {
        Function function = new Function("updateMaxBorrowDuration", Arrays.<Type>asList(_bookId, _newDuration), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public void updateMaxBorrowDuration(Utf8String _bookId, Uint256 _newDuration, TransactionSucCallback callback) {
        Function function = new Function("updateMaxBorrowDuration", Arrays.<Type>asList(_bookId, _newDuration), Collections.<TypeReference<?>>emptyList());
        executeTransactionAsync(function, callback);
    }

    public Future<Utf8String> getBooksOfCategory(Utf8String _bookCategory) {
        Function function = new Function("getBooksOfCategory", 
                Arrays.<Type>asList(_bookCategory), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<TransactionReceipt> registerStudent(Utf8String _studId, Utf8String _bookId, Utf8String _emailAddr, Utf8String _bookName, Utf8String _schoolName, Utf8String _bookCategory) {
        Function function = new Function("registerStudent", Arrays.<Type>asList(_studId, _bookId, _emailAddr, _bookName, _schoolName, _bookCategory), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public void registerStudent(Utf8String _studId, Utf8String _bookId, Utf8String _emailAddr, Utf8String _bookName, Utf8String _schoolName, Utf8String _bookCategory, TransactionSucCallback callback) {
        Function function = new Function("registerStudent", Arrays.<Type>asList(_studId, _bookId, _emailAddr, _bookName, _schoolName, _bookCategory), Collections.<TypeReference<?>>emptyList());
        executeTransactionAsync(function, callback);
    }

    public Future<TransactionReceipt> borrowBook(Utf8String _bookId, Utf8String _studId) {
        Function function = new Function("borrowBook", Arrays.<Type>asList(_bookId, _studId), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public void borrowBook(Utf8String _bookId, Utf8String _studId, TransactionSucCallback callback) {
        Function function = new Function("borrowBook", Arrays.<Type>asList(_bookId, _studId), Collections.<TypeReference<?>>emptyList());
        executeTransactionAsync(function, callback);
    }

    public Future<List<Type>> getStudent(Utf8String _studId) {
        Function function = new Function("getStudent", 
                Arrays.<Type>asList(_studId), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
        return executeCallMultipleValueReturnAsync(function);
    }

    public Future<List<Type>> checkBookStatus(Utf8String _bookId) {
        Function function = new Function("checkBookStatus", 
                Arrays.<Type>asList(_bookId), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Bool>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return executeCallMultipleValueReturnAsync(function);
    }

    public static Future<Book6> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, BigInteger initialWeiValue) {
        return deployAsync(Book6.class, web3j, credentials, gasPrice, gasLimit, BINARY, "", initialWeiValue);
    }

    public static Future<Book6> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, BigInteger initialWeiValue) {
        return deployAsync(Book6.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "", initialWeiValue);
    }

    public static Book6 load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Book6(contractAddress, web3j, credentials, gasPrice, gasLimit, false);
    }

    public static Book6 load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Book6(contractAddress, web3j, transactionManager, gasPrice, gasLimit, false);
    }

    public static Book6 loadByName(String contractName, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Book6(contractName, web3j, credentials, gasPrice, gasLimit, true);
    }

    public static Book6 loadByName(String contractName, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Book6(contractName, web3j, transactionManager, gasPrice, gasLimit, true);
    }
}
